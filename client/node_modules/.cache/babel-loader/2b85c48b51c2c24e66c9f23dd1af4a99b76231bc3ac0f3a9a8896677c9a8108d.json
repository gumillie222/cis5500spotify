{"ast":null,"code":"var _jsxFileName = \"/Users/milliegu/github/cis5500spotify/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nexport default function Dashboard(props) {\n  _s();\n  // The state maintained by this React Component.\n  // This component maintains the list of people.\n  const [people, setPeople] = useState([]);\n\n  // React function that is called when the page load.\n  useEffect(() => {\n    // Send an HTTP request to the server.\n    fetch('http://localhost:8081/people', {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(peopleList => {\n      // Map each attribute of a person in this.state.people to an HTML element\n      let peopleDivs = peopleList.map((person, i) => /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        className: \"person\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, person.login), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, person.name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"birthyear\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, person.birthyear)));\n\n      // Set the state of the person list to the value returned by the HTTP response from the server.\n      setPeople(peopleDivs);\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageNavbar, {\n    active: \"Dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container people-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron less-headspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"people-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"people-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Birth Year\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"results-container\",\n    id: \"results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, people)))));\n}\n_s(Dashboard, \"iLHt2u73MC8pQH7JexuLSo07ahk=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","PageNavbar","Dashboard","props","people","setPeople","fetch","method","then","res","json","peopleList","peopleDivs","map","person","i","login","name","birthyear","catch","err","console","log"],"sources":["/Users/milliegu/github/cis5500spotify/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\n\nexport default function Dashboard(props) {\n\n  // The state maintained by this React Component.\n  // This component maintains the list of people.\n  const [people, setPeople] = useState([])\n\n  // React function that is called when the page load.\n  useEffect(() => {\n    // Send an HTTP request to the server.\n    fetch('http://localhost:8081/people', {\n      method: 'GET', // The type of HTTP request.\n    })\n      .then(res => res.json()) // Convert the response data to a JSON.\n      .then(peopleList => {\n        // Map each attribute of a person in this.state.people to an HTML element\n        let peopleDivs = peopleList.map((person, i) => (\n          <div key={i} className='person'>\n            <div className='login'>{person.login}</div>\n            <div className='name'>{person.name}</div>\n            <div className='birthyear'>{person.birthyear}</div>\n          </div>\n        ));\n\n        // Set the state of the person list to the value returned by the HTTP response from the server.\n        setPeople(peopleDivs);\n      })\n      .catch(err => console.log(err))\t// Print the error if there is one.\n  }, [])\n\n\n  return (\n    <div className='Dashboard'>\n      <PageNavbar active='Dashboard' />\n      <div className='container people-container'>\n        <br></br>\n        <div className='jumbotron less-headspace'>\n          <div className='people-container'>\n            <div className='people-header'>\n              <div className='header-lg'>\n                <strong>Login</strong>\n              </div>\n              <div className='header'>\n                <strong>Name</strong>\n              </div>\n              <div className='header'>\n                <strong>Birth Year</strong>\n              </div>\n            </div>\n            <div className='results-container' id='results'>\n              {people}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAC/B,OAAO,sCAAsC;AAC7C,OAAOC,UAAU,MAAM,cAAc;AAErC,eAAe,SAASC,SAAS,CAACC,KAAK,EAAE;EAAA;EAEvC;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd;IACAM,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,KAAK,CAAE;IACjB,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CAAC;IAAA,CACxBF,IAAI,CAACG,UAAU,IAAI;MAClB;MACA,IAAIC,UAAU,GAAGD,UAAU,CAACE,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBACxC;QAAK,GAAG,EAAEA,CAAE;QAAC,SAAS,EAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC7B;QAAK,SAAS,EAAC,OAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAED,MAAM,CAACE,KAAK,CAAO,eAC3C;QAAK,SAAS,EAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEF,MAAM,CAACG,IAAI,CAAO,eACzC;QAAK,SAAS,EAAC,WAAW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEH,MAAM,CAACI,SAAS,CAAO,CAEtD,CAAC;;MAEF;MACAb,SAAS,CAACO,UAAU,CAAC;IACvB,CAAC,CAAC,CACDO,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,EAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAGN,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACxB,oBAAC,UAAU;IAAC,MAAM,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACjC;IAAK,SAAS,EAAC,4BAA4B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAS,eACT;IAAK,SAAS,EAAC,0BAA0B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvC;IAAK,SAAS,EAAC,kBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC/B;IAAK,SAAS,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC5B;IAAK,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQ,OAAK,CAAS,CAClB,eACN;IAAK,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACrB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQ,MAAI,CAAS,CACjB,eACN;IAAK,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACrB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQ,YAAU,CAAS,CACvB,CACF,eACN;IAAK,SAAS,EAAC,mBAAmB;IAAC,EAAE,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5ChB,MAAM,CACH,CACF,CACF,CACF,CACF;AAGV;AAAC,GAzDuBF,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}